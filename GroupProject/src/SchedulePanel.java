/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
import java.util.*;
/**
 *
 * @author Steve
 */
public class SchedulePanel extends javax.swing.JPanel {

    /**
     * Creates new form SchedulePanel
     */
    public SchedulePanel() {
        initComponents();
        int time = 8;
        
        for(int i = 0; i < scheduleTable.getRowCount(); i++)
        {
            if(time < 12)
            {
                scheduleTable.setValueAt(time + ":00 AM", i, 0);
            }
            else
            {
                if(time == 12)
                {
                    scheduleTable.setValueAt("12:00 PM", i, 0);
                }
                else
                {
                    scheduleTable.setValueAt(time - 12 + ":00 PM", i, 0);
                }
            }
            time++;
        }
    }
    
    // Print schedule information for faculty and students
    public void setSchedule(User user)
    {
        if(user.getClass().getName().equals("Student"))
        {
            Student s = (Student)user;
            LinkedList<CurrentCourse> courses = new LinkedList<CurrentCourse>();
            courses = s.getCurrentSchudule();
            ListIterator<CurrentCourse> it = courses.listIterator();
            
            CurrentCourse current;
            String timeString;
            int time;
            
            while(it.hasNext())
            {
                current = it.next();
                timeString = current.getTime().substring(0,2);
                if(timeString.charAt(1) == ':')
                {
                    time = Integer.parseInt(timeString.substring(0, 1));
                    System.out.println("Course Time: " + time);
                }
                else
                {
                    time = Integer.parseInt(timeString);
                    System.out.println("Course Time: " + time);
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        scheduleTable = new javax.swing.JTable();

        scheduleTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Time", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(scheduleTable);
        scheduleTable.getColumnModel().getColumn(0).setResizable(false);
        scheduleTable.getColumnModel().getColumn(1).setResizable(false);
        scheduleTable.getColumnModel().getColumn(2).setResizable(false);
        scheduleTable.getColumnModel().getColumn(3).setResizable(false);
        scheduleTable.getColumnModel().getColumn(4).setResizable(false);
        scheduleTable.getColumnModel().getColumn(5).setResizable(false);
        scheduleTable.getColumnModel().getColumn(6).setResizable(false);
        scheduleTable.getColumnModel().getColumn(7).setResizable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 609, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable scheduleTable;
    // End of variables declaration//GEN-END:variables
}
