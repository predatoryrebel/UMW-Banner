
import java.util.ListIterator;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.ListModel;

/**
 * Allows a faculty member to drop a student from one of the course they teach
 * @author cjoyner
 */
public class DropAStudentFaculty extends javax.swing.JFrame {

    /**
     * Creates new form DropAStudentFaculty
     */
    public DropAStudentFaculty(Faculty professor) {
        initComponents();
        faculty = professor;
        reset();
    }
    /**
     * Adds faculty member course list to course list box
     */
    private void reset()
    {
        ListIterator<CurrentCourse> iterator = faculty.getCourses().listIterator();
        DefaultListModel listModel = new DefaultListModel();
        //add courses to the list model
        while (iterator.hasNext())
        {
            CurrentCourse element = iterator.next();
            listModel.addElement(element);
        }
        //set list of course
        courseList.setModel(listModel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        courseList = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        studentList = new javax.swing.JList();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        dropList = new javax.swing.JList();
        jLabel3 = new javax.swing.JLabel();
        drop = new javax.swing.JButton();
        exit = new javax.swing.JButton();
        clear = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        courseList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                courseListMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(courseList);

        jLabel1.setText("Select course");

        studentList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                studentListMouseReleased(evt);
            }
        });
        jScrollPane2.setViewportView(studentList);

        jLabel2.setText("Select Student to Drop");

        jScrollPane3.setViewportView(dropList);

        jLabel3.setText("Drop List");

        drop.setText("Drop");
        drop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dropActionPerformed(evt);
            }
        });

        exit.setText("Exit");
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });

        clear.setText("Clear");
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jScrollPane1)
                            .addComponent(jScrollPane2)
                            .addComponent(jScrollPane3))
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(exit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(drop, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(clear))))
                .addContainerGap(52, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addGap(17, 17, 17)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addComponent(drop)
                        .addGap(18, 18, 18)
                        .addComponent(clear)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(exit)))
                .addGap(17, 17, 17)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addGap(14, 14, 14)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(113, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Mouse is released adds students in selected course to student list box
     * @param evt 
     */
    private void courseListMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_courseListMouseReleased
        //get selected course
        int index = courseList.getSelectedIndex();
        ListModel<CurrentCourse> list = courseList.getModel();
        course = list.getElementAt(index);
        
        //add students from selected course
        ListIterator<Student> iterator = course.getEnrolledStudents().listIterator();
        DefaultListModel listModel = new DefaultListModel();
        while (iterator.hasNext())
        {
            Student student = iterator.next();
            listModel.addElement(student);
        }
        
        studentList.setModel(listModel);
    }//GEN-LAST:event_courseListMouseReleased

    /**
     * Mouse is released add student to drop list box
     * @param evt 
     */
    private void studentListMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_studentListMouseReleased
        //get index of click object
        int index = studentList.getSelectedIndex();
        ListModel<Student> listModel = studentList.getModel();
        //get student
        Student student = listModel.getElementAt(index);
        DefaultListModel dropListModel = new DefaultListModel();
        listModel = dropList.getModel();
        //adds items already in addCourseList to addListModel
        for (int a = 0; a < listModel.getSize(); a++){
            dropListModel.addElement(listModel.getElementAt(a));
        }
        //add course to addCourseList
        dropListModel.addElement(student);
        dropList.setModel(dropListModel);
    }//GEN-LAST:event_studentListMouseReleased

    /**
     * Uses a button to drop students in drop list box
     * @param evt 
     */
    private void dropActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dropActionPerformed
        //get students to drop
        ListModel<Student> listModel = dropList.getModel();
        //drop students for the course and student's course list
        for (int a = 0; a < listModel.getSize(); a++)
        {
            Student student = listModel.getElementAt(a);
            course.getEnrolledStudents().remove(student);
            course.dropStudent();
            student.getCurrentSchudule().remove(course);
            student.setCreditHoursEnrolled(student.getCreditHoursEnrolled() - course.getCredits());
            //display remove course
            JFrame frame = new JFrame();
            JOptionPane.showMessageDialog(frame, student.getFirstName() + "  has been removed from "  + course.getName() );
            
            Student waitingStudent = course.getWaitingList().pollFirst();
            if (waitingStudent != null)
            {
                //adds student from waiting list
                course.getEnrolledStudents().add(waitingStudent);
                course.addStudent();
                
                //makes sure class is not full and student will not go over approved credits
                int totalCredits = waitingStudent.getCreditHoursEnrolled();
                totalCredits = totalCredits + course.getCredits();
                
                if (totalCredits <= waitingStudent.getApprovedCredits()  && waitingStudent.getHolds() == false)
                {
                    //adds course to current enrolled list
                    waitingStudent.setCreditHoursEnrolled(totalCredits);
                    waitingStudent.getCurrentSchudule().add(course);
                    frame = new JFrame();
                    JOptionPane.showMessageDialog(frame, waitingStudent.getFirstName() + " " + waitingStudent.getLastName() +
                            "has been added from the waiting list" );
                }
            }
        }
        
        reset();
    }//GEN-LAST:event_dropActionPerformed

    /**
     * Exits Drop a student faculty
     * @param evt 
     */
    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_exitActionPerformed

    /**
     * Clears all list boxes, calls reset
     * @param evt 
     */
    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        DefaultListModel listModel = new DefaultListModel();
        //clear all list boxes
        listModel.clear();
        courseList.setModel(listModel);
        studentList.setModel(listModel);
        dropList.setModel(listModel);
        reset();
    }//GEN-LAST:event_clearActionPerformed

    
    private Faculty faculty;
    private CurrentCourse course;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton clear;
    private javax.swing.JList courseList;
    private javax.swing.JButton drop;
    private javax.swing.JList dropList;
    private javax.swing.JButton exit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JList studentList;
    // End of variables declaration//GEN-END:variables
}
